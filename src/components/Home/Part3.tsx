import { Link } from "react-router";

export default function Part3() {
  const cardData = [
    {
      id: "a",
      title: "Ph·∫£i l·∫•y l·ª£i √≠ch chung l√†m ƒëi·ªÉm quy t·ª•",
      subtitle: "ƒë·ªìng th·ªùi t√¥n tr·ªçng nh·ªØng l·ª£i √≠ch kh√°c bi·ªát ch√≠nh ƒë√°ng",
      color: "#FA8072",
      image: "/imgs/Part3/Ph·∫£i l·∫•y l·ª£i √≠ch chung l√†m ƒëi·ªÉm quy t·ª•.jpg",
      content: [
        "Ph·∫£i x·ª≠ l√Ω t·ªët quan h·ªá l·ª£i √≠ch, t√¨m ra ƒëi·ªÉm t∆∞∆°ng ƒë·ªìng v√† l·ª£i √≠ch chung.",
        "L·∫•y l·ª£i √≠ch t·ªëi cao c·ªßa d√¢n t·ªôc v√† l·ª£i √≠ch cƒÉn b·∫£n c·ªßa nh√¢n d√¢n lao ƒë·ªông l√†m m·ª•c ti√™u ph·∫•n ƒë·∫•u.",
        "ƒê√¢y l√† nguy√™n t·∫Øc b·∫•t di b·∫•t d·ªãch, l√† ng·ªçn c·ªù ƒëo√†n k·∫øt, l√† m·∫´u s·ªë chung ƒë·ªÉ quy t·ª• c√°c t·∫ßng l·ªõp, giai c·∫•p, d√¢n t·ªôc, t√¥n gi√°o trong M·∫∑t tr·∫≠n.",
      ],
    },
    {
      id: "b",
      title: "K·∫ø th·ª´a truy·ªÅn th·ªëng y√™u n∆∞·ªõc",
      subtitle: "nh√¢n nghƒ©a ‚Äì ƒëo√†n k·∫øt",
      color: "#E49B0F",
      image: "/imgs/Part3/K·∫ø th·ª´a truy·ªÅn th·ªëng y√™u n∆∞·ªõc.jpg",
      content: [
        "Y√™u n∆∞·ªõc ‚Äì nh√¢n nghƒ©a ‚Äì ƒëo√†n k·∫øt l√† c·ªôi ngu·ªìn s·ª©c m·∫°nh gi√∫p d√¢n t·ªôc v∆∞·ª£t qua thi√™n tai, ƒë·ªãch h·ªça v√† gi√†nh th·∫Øng l·ª£i.",
      ],
    },
    {
      id: "c",
      title: "C√≥ l√≤ng khoan dung, ƒë·ªô l∆∞·ª£ng",
      subtitle: "L·ªùi d·∫°y c·ªßa Ch·ªß t·ªãch H·ªì Ch√≠ Minh",
      color: "#059669",
      image: "/imgs/Part3/C√≥ l√≤ng khoan dung, ƒë·ªô l∆∞·ª£ng.jpg",
      content: [
        '"NƒÉm ng√≥n tay c√≥ ng√≥n d√†i ng√≥n ng·∫Øn, nh∆∞ng c·∫£ nƒÉm ng√≥n ƒë·ªÅu thu·ªôc v·ªÅ m·ªôt b√†n tay. Trong m·∫•y tri·ªáu ng∆∞·ªùi c≈©ng c√≥ ng∆∞·ªùi th·∫ø n√†y th·∫ø kh√°c, nh∆∞ng th·∫ø n√†y hay th·∫ø kh√°c ƒë·ªÅu d√≤ng d√µi t·ªï ti√™n ta. V·∫≠y n√™n ph·∫£i khoan h·ªìng, ƒë·∫°i ƒë·ªô... C√≥ nh∆∞ th·∫ø m·ªõi th√†nh ƒëo√†n k·∫øt, c√≥ ƒë·∫°i ƒëo√†n k·∫øt th√¨ t∆∞∆°ng lai ch·∫Øc ch·∫Øn s·∫Ω v·∫ª vang."',
      ],
    },
    {
      id: "d",
      title: "C√≥ ni·ªÅm tin v√†o nh√¢n d√¢n",
      subtitle: "Nh√¢n d√¢n l√† n·ªÅn t·∫£ng c·ªßa c√°ch m·∫°ng",
      color: "#6495ED",
      image: "/imgs/Part3/C√≥ ni·ªÅm tin v√†o nh√¢n d√¢n.jpg",
      content: [
        "Nh√¢n d√¢n l√† n·ªÅn t·∫£ng, g·ªëc r·ªÖ, ch·ªß th·ªÉ c·ªßa m·∫∑t tr·∫≠n.",
        "L√† ch·ªó d·ª±a v·ªØng ch·∫Øc c·ªßa ƒê·∫£ng, l√† c·ªôi ngu·ªìn s·ª©c m·∫°nh v√¥ t·∫≠n quy·∫øt ƒë·ªãnh th·∫Øng l·ª£i c·ªßa c√°ch m·∫°ng.",
        "Mu·ªën th·ª±c hi·ªán ƒë·∫°i ƒëo√†n k·∫øt c·∫ßn y√™u d√¢n, tin d√¢n, d·ª±a v√†o d√¢n, s·ªëng v√† ƒë·∫•u tranh v√¨ h·∫°nh ph√∫c c·ªßa nh√¢n d√¢n.",
        "Trong kh√°ng chi·∫øn, nh·ªù tin d√¢n v√† khoan dung, ƒê·∫£ng ƒë√£ quy t·ª• ƒë∆∞·ª£c c·∫£ nh·ªØng ng∆∞·ªùi t·ª´ng ƒë·ª©ng ·ªü ph√≠a b√™n kia nh∆∞ng sau ƒë√≥ quay v·ªÅ v·ªõi d√¢n t·ªôc.",
      ],
    },
  ];

  const renderCard = (card: (typeof cardData)[number]) => (
    <div
      className="card group"
      style={{ "--clr": card.color } as React.CSSProperties}
    >
      <div className="circle">
        <img src={card.image} alt={card.title} className="logo" />
      </div>

      <img
        src={card.image}
        alt={`${card.title} - ƒê·∫°i ƒëo√†n k·∫øt d√¢n t·ªôc`}
        className="product_img"
      />

      <div className="content">
        <div className="badge">{card.id}</div>
        <h2>{card.title}</h2>
        <p className="subtitle">{card.subtitle}</p>

        <div className="scroll-content">
          {card.content.map((text, index) => (
            <p key={index} className="content-text">
              {card.id === "c" && index === 0 ? (
                <em>"{text.replace(/"/g, "")}"</em>
              ) : (
                text
              )}
            </p>
          ))}
        </div>

        <div className="modern-meaning">
          <strong>√ù nghƒ©a h√¥m nay:</strong> Trong x√£ h·ªôi hi·ªán ƒë·∫°i, khi m√¢u thu·∫´n
          l·ª£i √≠ch xu·∫•t hi·ªán, vi·ªác ƒë·∫∑t l·ª£i √≠ch chung l√™n cao nh·∫•t v√† c√≥ th√°i ƒë·ªô
          khoan dung v·∫´n l√† ch√¨a kh√≥a ƒë·ªÉ gi·ªØ g√¨n s·ª± ·ªïn ƒë·ªãnh v√† ƒëo√†n k·∫øt.
        </div>

        <div className="mt-4">
          <Link
            to={`/part3/${card.id}`}
            className="inline-block px-4 py-2 rounded-md bg-red-600 hover:bg-red-700 text-white font-semibold shadow-md"
          >
            Xem th√™m
          </Link>
        </div>
      </div>
    </div>
  );

  return (
    <section
      className="min-h-screen relative"
      style={{
        fontFamily: '"Poppins", sans-serif',
      }}
    >
      {/* Background Image with Overlay */}
      <div
        className="absolute inset-0 bg-cover bg-center bg-no-repeat"
        style={{
          backgroundImage: 'url("/imgs/HCM ƒëo√†n k·∫øt d√¢n t·ªôc.jpg")',
        }}
      ></div>
      <div
        className="absolute inset-0"
        style={{
          background:
            "linear-gradient(135deg, rgba(15, 23, 42, 0.85) 0%, rgba(15, 23, 42, 0.75) 50%, rgba(15, 23, 42, 0.85) 100%)",
        }}
      ></div>
      {/* Header */}
      <div className="text-center py-12 relative z-10">
        <h1
          className="text-4xl md:text-5xl font-bold text-white mb-4"
          style={{ textShadow: "2px 2px 4px rgba(0, 0, 0, 0.5)" }}
        >
          ƒêi·ªÅu ki·ªán ƒë·ªÉ x√¢y d·ª±ng kh·ªëi ƒë·∫°i ƒëo√†n k·∫øt to√†n d√¢n t·ªôc
        </h1>
        <div className="w-32 h-1 bg-gradient-to-r from-red-600 to-yellow-500 mx-auto mb-6"></div>
        <Link
          to="/part3"
          className="inline-block px-6 py-3 rounded-lg bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
        >
          üìñ Xem chi ti·∫øt ƒë·∫ßy ƒë·ªß
        </Link>
      </div>

      {/* Cards + Path Stage */}
      <div className="container mx-auto px-6 pb-12 relative z-10">
        <div className="path-stage relative mx-auto" style={{ height: 700 }}>
          {/* Animated star path */}
          <svg
            className="absolute inset-0 w-full h-full"
            viewBox="0 0 100 100"
            preserveAspectRatio="none"
          >
            <defs>
              <linearGradient id="dashGlow" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" stopColor="#ef4444" />
                <stop offset="100%" stopColor="#b91c1c" />
              </linearGradient>
              <filter id="shadow">
                <feDropShadow
                  dx="0"
                  dy="0"
                  stdDeviation="0.6"
                  floodColor="#ef4444"
                  floodOpacity="0.9"
                />
              </filter>
            </defs>
            {/* Five-point star path connecting nodes: A, Meaning, D, B, C, back to A */}
            <path
              id="starPath"
              d="M 12 18 L 50 6 L 88 18 L 70 70 L 30 70 Z"
              fill="none"
              stroke="url(#dashGlow)"
              strokeWidth="1.2"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeDasharray="2 3"
              filter="url(#shadow)"
            ></path>
            {/* Moving red dot */}
            <circle r="1.6" fill="#ef4444">
              <animateMotion dur="6s" repeatCount="indefinite" rotate="auto">
                <mpath href="#starPath" />
              </animateMotion>
            </circle>
            {/* Dash offset animation */}
            <animate
              xlinkHref="#starPath"
              attributeName="stroke-dashoffset"
              from="0"
              to="-50"
              dur="3s"
              repeatCount="indefinite"
            />
          </svg>

          {/* Nodes positioned to match the star points (percent-based, responsive) */}
          <div className="node node-a" style={{ left: "12%", top: "18%" }}>
            {renderCard(cardData[0])}
          </div>
          <div className="node node-mean" style={{ left: "50%", top: "6%" }}>
            <div className="meaning-card">
              <h3>√în t·∫≠p ki·∫øn th·ª©c</h3>
              <p>C·ªßng c·ªë ki·∫øn th·ª©c n·∫Øm b·∫Øt t∆∞ t∆∞·ªüng</p>
            </div>
          </div>
          <div className="node node-d" style={{ left: "88%", top: "18%" }}>
            {renderCard(cardData[3])}
          </div>
          <div className="node node-b" style={{ left: "30%", top: "70%" }}>
            {renderCard(cardData[1])}
          </div>
          <div className="node node-c" style={{ left: "70%", top: "70%" }}>
            {renderCard(cardData[2])}
          </div>
        </div>
      </div>

      <style>{`
        .path-stage { max-width: 1100px; }
        .node { position: absolute; transform: translate(-50%, -50%); }
        .meaning-card {
          width: 280px;
          background: rgba(255,255,255,0.1);
          backdrop-filter: blur(2px);
          border-radius: 16px;
          border: 2px dashed #ef4444;
          box-shadow: 0 0 20px rgba(239,68,68,0.35);
          padding: 16px;
          color: #fff;
          text-align: center;
        }
        .meaning-card h3 { font-size: 1.25rem; font-weight: 700; margin-bottom: 6px; color: #ef4444; }
        .meaning-card p { font-size: .95rem; color: #e5e7eb; }

        .card {
          position: relative;
          width: 320px;
          height: 380px;
          display: flex;
          justify-content: center;
          align-items: center;
          transition: 0.5s;
          transition-delay: 0.5s;
          cursor: pointer;
        }

        .card:hover {
          width: 600px;
          transition-delay: 0.5s;
        }

        .card .circle {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          border-radius: 20px;
          display: flex;
          justify-content: center;
          align-items: center;
          overflow: hidden;
        }

        .card .circle::before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: #191919;
          border: 8px solid var(--clr);
          border-radius: 20px;
          transition: 0.5s, background 0.5s;
          transition-delay: 0.75s, 1s;
          filter: drop-shadow(0 0 10px var(--clr)) drop-shadow(0 0 60px var(--clr));
        }

        .card:hover .circle::before {
          transition-delay: 0.5s;
          background: var(--clr);
        }

        .card .circle .logo {
          position: relative;
          width: 200px;
          height: 200px;
          object-fit: cover;
          border-radius: 50%;
          transition: 0.5s;
          transition-delay: 0.5s;
          z-index: 2;
        }

        .card:hover .circle .logo {
          transform: scale(0);
          transition-delay: 0s;
        }

        .card .product_img {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%) scale(0) rotate(315deg);
          width: 180px;
          height: 180px;
          object-fit: cover;
          border-radius: 50%;
          transition: 0.5s ease-in-out;
        }

        .card:hover .product_img {
          transition-delay: 0.75s;
          top: 50%;
          left: 80%;
          width: 180px;
          height: 180px;
          transform: translate(-50%, -50%) scale(1) rotate(15deg);
        }

        .card .content {
          position: absolute;
          width: 55%;
          left: 15%;
          padding: 20px;
          opacity: 0;
          transition: 0.5s;
          visibility: hidden;
          max-height: 350px;
          overflow-y: auto;
        }

        .card:hover .content {
          transition-delay: 0.75s;
          opacity: 1;
          visibility: visible;
          left: 20px;
        }

        .card .content .badge {
          display: inline-block;
          background: var(--clr);
          color: white;
          width: 30px;
          height: 30px;
          border-radius: 50%;
          text-align: center;
          line-height: 30px;
          font-weight: bold;
          margin-bottom: 10px;
          text-transform: uppercase;
        }

        .card .content h2 {
          color: #fff;
          text-transform: uppercase;
          font-size: 1.8em;
          line-height: 1.2em;
          margin-bottom: 8px;
        }

        .card .content .subtitle {
          color: #ccc;
          font-size: 0.9em;
          margin-bottom: 15px;
          font-style: italic;
        }

        .card .content .scroll-content {
          max-height: 180px;
          overflow-y: auto;
          margin-bottom: 15px;
          padding-right: 10px;
        }

        .card .content .content-text {
          color: #fff;
          font-size: 0.85em;
          line-height: 1.4em;
          margin-bottom: 10px;
          text-align: justify;
        }

        .card .content .modern-meaning {
          color: #ffd700;
          font-size: 0.8em;
          line-height: 1.3em;
          background: rgba(255, 215, 0, 0.1);
          padding: 8px;
          border-radius: 8px;
          border-left: 3px solid #ffd700;
        }

        .card .content::-webkit-scrollbar {
          width: 4px;
        }

        .card .content::-webkit-scrollbar-track {
          background: rgba(255,255,255,0.1);
          border-radius: 4px;
        }

        .card .content::-webkit-scrollbar-thumb {
          background: var(--clr);
          border-radius: 4px;
        }

        .card .content .scroll-content::-webkit-scrollbar {
          width: 4px;
        }

        .card .content .scroll-content::-webkit-scrollbar-track {
          background: rgba(255,255,255,0.1);
          border-radius: 4px;
        }

        .card .content .scroll-content::-webkit-scrollbar-thumb {
          background: var(--clr);
          border-radius: 4px;
        }

        @media (max-width: 1024px) {
          .meaning-card { width: 240px; }
          .card { width: 300px; height: 360px; }
        }

        @media (max-width: 768px) {
          .card {
            width: 280px;
            height: 320px;
          }
          
          .card:hover {
            width: 320px;
          }
          
          .meaning-card { width: 210px; }
          .path-stage { height: 620px; }

          .card .content {
            width: 70%;
            left: 10%;
          }
          
          .card:hover .content {
            left: 15px;
          }
          
          .card .content h2 {
            font-size: 1.4em;
          }
        }
      `}</style>
    </section>
  );
}
